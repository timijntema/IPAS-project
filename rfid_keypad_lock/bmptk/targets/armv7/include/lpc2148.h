/****************************************************************************/
/*                                                                          */
/* lpc2148.h include file                                                   */
/*                                                                          */
/*                                                                          */
/*       This file is generated by mkt V1.02 (2011-06-22)                   */
/*                                                                          */
/*       (c) 2009 Wouter van Ooijen (wouter@voti.nl)                        */
/*                                                                          */
/*       Using this file with the mkt (MikroKit) application builder        */
/*       is allowed, without any consequences for the application           */
/*       (whether executable, binary, or hex image) being built.            */
/*                                                                          */
/*                                                                          */
/****************************************************************************/

#ifdef __ASSEMBLER__

/* Vectored Interrupt Controller */
#define VIC                      0xfffff000
#define VICIRQStatus_offset      0x00000000
#define VICFIQStatus_offset      0x00000004
#define VICRawIntr_offset        0x00000008
#define VICIntSelect_offset      0x0000000c
#define VICIntEnable_offset      0x00000010
#define VICIntEnClr_offset       0x00000014
#define VICSoftInt_offset        0x00000018
#define VICSoftIntClear_offset   0x0000001c
#define VICProtection_offset     0x00000020
#define VICVectAddr_offset       0x00000030
#define VICDefVectAddr_offset    0x00000034
#define VICVectAddr0_offset      0x00000100
#define VICVectAddr1_offset      0x00000104
#define VICVectAddr2_offset      0x00000108
#define VICVectAddr3_offset      0x0000010c
#define VICVectAddr4_offset      0x00000110
#define VICVectAddr5_offset      0x00000114
#define VICVectAddr6_offset      0x00000118
#define VICVectAddr7_offset      0x0000011c
#define VICVectAddr8_offset      0x00000120
#define VICVectAddr9_offset      0x00000124
#define VICVectAddr10_offset     0x00000128
#define VICVectAddr11_offset     0x0000012c
#define VICVectAddr12_offset     0x00000130
#define VICVectAddr13_offset     0x00000134
#define VICVectAddr14_offset     0x00000138
#define VICVectAddr15_offset     0x0000013c
#define VICVectCntl0_offset      0x00000200
#define VICVectCntl1_offset      0x00000204
#define VICVectCntl2_offset      0x00000208
#define VICVectCntl3_offset      0x0000020c
#define VICVectCntl4_offset      0x00000210
#define VICVectCntl5_offset      0x00000214
#define VICVectCntl6_offset      0x00000218
#define VICVectCntl7_offset      0x0000021c
#define VICVectCntl8_offset      0x00000220
#define VICVectCntl9_offset      0x00000224
#define VICVectCntl10_offset     0x00000228
#define VICVectCntl11_offset     0x0000022c
#define VICVectCntl12_offset     0x00000230
#define VICVectCntl13_offset     0x00000234
#define VICVectCntl14_offset     0x00000238
#define VICVectCntl15_offset     0x0000023c
#define VICIRQStatus             0xfffff000
#define VICFIQStatus             0xfffff004
#define VICRawIntr               0xfffff008
#define VICIntSelect             0xfffff00c
#define VICIntEnable             0xfffff010
#define VICIntEnClr              0xfffff014
#define VICSoftInt               0xfffff018
#define VICSoftIntClear          0xfffff01c
#define VICProtection            0xfffff020
#define VICVectAddr              0xfffff030
#define VICDefVectAddr           0xfffff034
#define VICVectAddr0             0xfffff100
#define VICVectAddr1             0xfffff104
#define VICVectAddr2             0xfffff108
#define VICVectAddr3             0xfffff10c
#define VICVectAddr4             0xfffff110
#define VICVectAddr5             0xfffff114
#define VICVectAddr6             0xfffff118
#define VICVectAddr7             0xfffff11c
#define VICVectAddr8             0xfffff120
#define VICVectAddr9             0xfffff124
#define VICVectAddr10            0xfffff128
#define VICVectAddr11            0xfffff12c
#define VICVectAddr12            0xfffff130
#define VICVectAddr13            0xfffff134
#define VICVectAddr14            0xfffff138
#define VICVectAddr15            0xfffff13c
#define VICVectCntl0             0xfffff200
#define VICVectCntl1             0xfffff204
#define VICVectCntl2             0xfffff208
#define VICVectCntl3             0xfffff20c
#define VICVectCntl4             0xfffff210
#define VICVectCntl5             0xfffff214
#define VICVectCntl6             0xfffff218
#define VICVectCntl7             0xfffff21c
#define VICVectCntl8             0xfffff220
#define VICVectCntl9             0xfffff224
#define VICVectCntl10            0xfffff228
#define VICVectCntl11            0xfffff22c
#define VICVectCntl12            0xfffff230
#define VICVectCntl13            0xfffff234
#define VICVectCntl14            0xfffff238
#define VICVectCntl15            0xfffff23c

/* Watchdog */
#define WD                       0xe0000000
#define WDMOD_offset             0x00000000
#define WDTC_offset              0x00000004
#define WDFEED_offset            0x00000008
#define WDTV_offset              0x0000000c
#define WDMOD                    0xe0000000
#define WDTC                     0xe0000004
#define WDFEED                   0xe0000008
#define WDTV                     0xe000000c

/* Timer (32 bit) 0 */
#define T0                       0xe0004000
#define T0IR_offset              0x00000000
#define T0TCR_offset             0x00000004
#define T0TC_offset              0x00000008
#define T0PR_offset              0x0000000c
#define T0PC_offset              0x00000010
#define T0MCR_offset             0x00000014
#define T0MR0_offset             0x00000018
#define T0MR1_offset             0x0000001c
#define T0MR2_offset             0x00000020
#define T0MR3_offset             0x00000024
#define T0CCR_offset             0x00000028
#define T0CR0_offset             0x0000002c
#define T0CR1_offset             0x00000030
#define T0CR2_offset             0x00000034
#define T0CR3_offset             0x00000038
#define T0EMR_offset             0x0000003c
#define T0CTCR_offset            0x00000070
#define T0IR                     0xe0004000
#define T0TCR                    0xe0004004
#define T0TC                     0xe0004008
#define T0PR                     0xe000400c
#define T0PC                     0xe0004010
#define T0MCR                    0xe0004014
#define T0MR0                    0xe0004018
#define T0MR1                    0xe000401c
#define T0MR2                    0xe0004020
#define T0MR3                    0xe0004024
#define T0CCR                    0xe0004028
#define T0CR0                    0xe000402c
#define T0CR1                    0xe0004030
#define T0CR2                    0xe0004034
#define T0CR3                    0xe0004038
#define T0EMR                    0xe000403c
#define T0CTCR                   0xe0004070

/* Timer (32 bit) 1 */
#define T1                       0xe0008000
#define T1IR_offset              0x00000000
#define T1TCR_offset             0x00000004
#define T1TC_offset              0x00000008
#define T1PR_offset              0x0000000c
#define T1PC_offset              0x00000010
#define T1MCR_offset             0x00000014
#define T1MR0_offset             0x00000018
#define T1MR1_offset             0x0000001c
#define T1MR2_offset             0x00000020
#define T1MR3_offset             0x00000024
#define T1CCR_offset             0x00000028
#define T1CR0_offset             0x0000002c
#define T1CR1_offset             0x00000030
#define T1CR2_offset             0x00000034
#define T1CR3_offset             0x00000038
#define T1EMR_offset             0x0000003c
#define T1CTCR_offset            0x00000070
#define T1IR                     0xe0008000
#define T1TCR                    0xe0008004
#define T1TC                     0xe0008008
#define T1PR                     0xe000800c
#define T1PC                     0xe0008010
#define T1MCR                    0xe0008014
#define T1MR0                    0xe0008018
#define T1MR1                    0xe000801c
#define T1MR2                    0xe0008020
#define T1MR3                    0xe0008024
#define T1CCR                    0xe0008028
#define T1CR0                    0xe000802c
#define T1CR1                    0xe0008030
#define T1CR2                    0xe0008034
#define T1CR3                    0xe0008038
#define T1EMR                    0xe000803c
#define T1CTCR                   0xe0008070

/* Universal Asynchronous Receiver Transmitter 0 */
#define U0                       0xe000c000
#define U0RBR_offset             0x00000000
#define U0THR_offset             0x00000000
#define U0DLL_offset             0x00000000
#define U0IER_offset             0x00000004
#define U0DLM_offset             0x00000004
#define U0IIR_offset             0x00000008
#define U0FCR_offset             0x00000008
#define U0LCR_offset             0x0000000c
#define U0MCR_offset             0x00000010
#define U0LSR_offset             0x00000014
#define U0MSR_offset             0x00000018
#define U0SCR_offset             0x0000001c
#define U0RBR                    0xe000c000
#define U0THR                    0xe000c000
#define U0DLL                    0xe000c000
#define U0IER                    0xe000c004
#define U0DLM                    0xe000c004
#define U0IIR                    0xe000c008
#define U0FCR                    0xe000c008
#define U0LCR                    0xe000c00c
#define U0MCR                    0xe000c010
#define U0LSR                    0xe000c014
#define U0MSR                    0xe000c018
#define U0SCR                    0xe000c01c

/* Universal Asynchronous Receiver Transmitter 1 */
#define U1                       0xe0010000
#define U1RBR_offset             0x00000000
#define U1THR_offset             0x00000000
#define U1DLL_offset             0x00000000
#define U1IER_offset             0x00000004
#define U1DLM_offset             0x00000004
#define U1IIR_offset             0x00000008
#define U1FCR_offset             0x00000008
#define U1LCR_offset             0x0000000c
#define U1MCR_offset             0x00000010
#define U1LSR_offset             0x00000014
#define U1MSR_offset             0x00000018
#define U1SCR_offset             0x0000001c
#define U1RBR                    0xe0010000
#define U1THR                    0xe0010000
#define U1DLL                    0xe0010000
#define U1IER                    0xe0010004
#define U1DLM                    0xe0010004
#define U1IIR                    0xe0010008
#define U1FCR                    0xe0010008
#define U1LCR                    0xe001000c
#define U1MCR                    0xe0010010
#define U1LSR                    0xe0010014
#define U1MSR                    0xe0010018
#define U1SCR                    0xe001001c

/* Pulse Width Modulator */
#define PWM                      0xe0014000
#define PWMIR_offset             0x00000000
#define PWMTCR_offset            0x00000004
#define PWMTC_offset             0x00000008
#define PWMPR_offset             0x0000000c
#define PWMPC_offset             0x00000010
#define PWMMCR_offset            0x00000014
#define PWMMR0_offset            0x00000018
#define PWMMR1_offset            0x0000001c
#define PWMMR2_offset            0x00000020
#define PWMMR3_offset            0x00000024
#define PWMMR4_offset            0x00000040
#define PWMMR5_offset            0x00000044
#define PWMMR6_offset            0x00000048
#define PWMPCR_offset            0x0000004c
#define PWMLER_offset            0x00000050
#define PWMIR                    0xe0014000
#define PWMTCR                   0xe0014004
#define PWMTC                    0xe0014008
#define PWMPR                    0xe001400c
#define PWMPC                    0xe0014010
#define PWMMCR                   0xe0014014
#define PWMMR0                   0xe0014018
#define PWMMR1                   0xe001401c
#define PWMMR2                   0xe0014020
#define PWMMR3                   0xe0014024
#define PWMMR4                   0xe0014040
#define PWMMR5                   0xe0014044
#define PWMMR6                   0xe0014048
#define PWMPCR                   0xe001404c
#define PWMLER                   0xe0014050

/* I2C Interface */
#define I2                       0xe001c000
#define I2CONSET_offset          0x00000000
#define I2STAT_offset            0x00000004
#define I2DAT_offset             0x00000008
#define I2ADR_offset             0x0000000c
#define I2SCLH_offset            0x00000010
#define I2SCLL_offset            0x00000014
#define I2CONCLR_offset          0x00000018
#define I2CONSET                 0xe001c000
#define I2STAT                   0xe001c004
#define I2DAT                    0xe001c008
#define I2ADR                    0xe001c00c
#define I2SCLH                   0xe001c010
#define I2SCLL                   0xe001c014
#define I2CONCLR                 0xe001c018

/* Serial Peripheral Interface */
#define SP                       0xe0020000
#define SPCR_offset              0x00000000
#define SPSR_offset              0x00000004
#define SPDR_offset              0x00000008
#define SPCCR_offset             0x0000000c
#define SPTCR_offset             0x00000010
#define SPTSR_offset             0x00000014
#define SPTOR_offset             0x00000018
#define SPINT_offset             0x0000001c
#define SPCR                     0xe0020000
#define SPSR                     0xe0020004
#define SPDR                     0xe0020008
#define SPCCR                    0xe002000c
#define SPTCR                    0xe0020010
#define SPTSR                    0xe0020014
#define SPTOR                    0xe0020018
#define SPINT                    0xe002001c

/* Real Time Clock */
#define RTC                      0xe0024000
#define RTCILR_offset            0x00000000
#define RTCCTC_offset            0x00000004
#define RTCCCR_offset            0x00000008
#define RTCCIIR_offset           0x0000000c
#define RTCAMR_offset            0x00000010
#define RTCCTIME0_offset         0x00000014
#define RTCCTIME1_offset         0x00000018
#define RTCCTIME2_offset         0x0000001c
#define RTCSEC_offset            0x00000020
#define RTCMIN_offset            0x00000024
#define RTCHOUR_offset           0x00000028
#define RTCDOM_offset            0x0000002c
#define RTCDOW_offset            0x00000030
#define RTCDOY_offset            0x00000034
#define RTCMONTH_offset          0x00000038
#define RTCYEAR_offset           0x0000003c
#define RTCALSEC_offset          0x00000060
#define RTCALMIN_offset          0x00000064
#define RTCALHOUR_offset         0x00000068
#define RTCALDOM_offset          0x0000006c
#define RTCALDOW_offset          0x00000070
#define RTCALDOY_offset          0x00000074
#define RTCALMON_offset          0x00000078
#define RTCALYEAR_offset         0x0000007c
#define RTCPREINT_offset         0x00000080
#define RTCPREFRAC_offset        0x00000084
#define RTCILR                   0xe0024000
#define RTCCTC                   0xe0024004
#define RTCCCR                   0xe0024008
#define RTCCIIR                  0xe002400c
#define RTCAMR                   0xe0024010
#define RTCCTIME0                0xe0024014
#define RTCCTIME1                0xe0024018
#define RTCCTIME2                0xe002401c
#define RTCSEC                   0xe0024020
#define RTCMIN                   0xe0024024
#define RTCHOUR                  0xe0024028
#define RTCDOM                   0xe002402c
#define RTCDOW                   0xe0024030
#define RTCDOY                   0xe0024034
#define RTCMONTH                 0xe0024038
#define RTCYEAR                  0xe002403c
#define RTCALSEC                 0xe0024060
#define RTCALMIN                 0xe0024064
#define RTCALHOUR                0xe0024068
#define RTCALDOM                 0xe002406c
#define RTCALDOW                 0xe0024070
#define RTCALDOY                 0xe0024074
#define RTCALMON                 0xe0024078
#define RTCALYEAR                0xe002407c
#define RTCPREINT                0xe0024080
#define RTCPREFRAC               0xe0024084

/* General Purpose IO 0 */
#define IO0                      0xe0028000
#define IO0PIN_offset            0x00000000
#define IO0SET_offset            0x00000004
#define IO0DIR_offset            0x00000008
#define IO0CLR_offset            0x0000000c
#define IO0PIN                   0xe0028000
#define IO0SET                   0xe0028004
#define IO0DIR                   0xe0028008
#define IO0CLR                   0xe002800c

/* General Purpose IO 1 */
#define IO1                      0xe0028010
#define IO1PIN_offset            0x00000000
#define IO1SET_offset            0x00000004
#define IO1DIR_offset            0x00000008
#define IO1CLR_offset            0x0000000c
#define IO1PIN                   0xe0028010
#define IO1SET                   0xe0028014
#define IO1DIR                   0xe0028018
#define IO1CLR                   0xe002801c

/* Pin Connect Block */
#define PINSEL                   0xe002c000
#define PINSEL0_offset           0x00000000
#define PINSEL1_offset           0x00000004
#define PINSEL2_offset           0x00000014
#define PINSEL0                  0xe002c000
#define PINSEL1                  0xe002c004
#define PINSEL2                  0xe002c014

/* DA converter Connect Block */
#define DAC                      0xe006c000
#define DACR_offset              0x00000000
#define DACR                     0xe006c000

/* Memory Accelerator Module */
#define MAM                      0xe01fc000
#define MAMCR_offset             0x00000000
#define MAMTIM_offset            0x00000004
#define MAMMAP_offset            0x00000040
#define MAMCR                    0xe01fc000
#define MAMTIM                   0xe01fc004
#define MAMMAP                   0xe01fc040

/* Phase Locked Loop 0 */
#define PLL0                     0xe01fc080
#define PLL0CON_offset           0x00000000
#define PLL0CFG_offset           0x00000004
#define PLL0STAT_offset          0x00000008
#define PLL0FEED_offset          0x0000000c
#define PLL0CON                  0xe01fc080
#define PLL0CFG                  0xe01fc084
#define PLL0STAT                 0xe01fc088
#define PLL0FEED                 0xe01fc08c

/* Phase Locked Loop 1 */
#define PLL1                     0xe01fc0a0
#define PLL1CON_offset           0x00000000
#define PLL1CFG_offset           0x00000004
#define PLL1STAT_offset          0x00000008
#define PLL1FEED_offset          0x0000000c
#define PLL1CON                  0xe01fc0a0
#define PLL1CFG                  0xe01fc0a4
#define PLL1STAT                 0xe01fc0a8
#define PLL1FEED                 0xe01fc0ac

/* VPB Divider */
#define VPB                      0xe01fc100
#define VPBDIV_offset            0x00000000
#define VPBDIV                   0xe01fc100

/* Power Control */
#define PCON                     0xe01fc0c0
#define PCONP_offset             0x00000004
#define PCONP                    0xe01fc0c4

/* External Interrupts */
#define EXT                      0xe01fc140
#define EXTINT_offset            0x00000000
#define EXTWAKE_offset           0x00000004
#define EXTINT                   0xe01fc140
#define EXTWAKE                  0xe01fc144

/* System Control and Status */
#define SCS                      0xe01fc1a0
#define SCS_offset               0x00000000

/* Memory mapping control */
#define MEM                      0xe01fc040
#define MEMMAP_offset            0x00000000
#define MEMMAP                   0xe01fc040

/* Fast General Purpose IO 0 */
#define FIO0                     0x3fffc000
#define FIO0DIR_offset           0x00000000
#define FIO0MASK_offset          0x00000010
#define FIO0PIN_offset           0x00000014
#define FIO0SET_offset           0x00000018
#define FIO0CLR_offset           0x0000001c
#define FIO0DIR                  0x3fffc000
#define FIO0MASK                 0x3fffc010
#define FIO0PIN                  0x3fffc014
#define FIO0SET                  0x3fffc018
#define FIO0CLR                  0x3fffc01c

/* Fast General Purpose IO 1 */
#define FIO1                     0x3fffc020
#define FIO1DIR_offset           0x00000000
#define FIO1MASK_offset          0x00000010
#define FIO1PIN_offset           0x00000014
#define FIO1SET_offset           0x00000018
#define FIO1CLR_offset           0x0000001c
#define FIO1DIR                  0x3fffc020
#define FIO1MASK                 0x3fffc030
#define FIO1PIN                  0x3fffc034
#define FIO1SET                  0x3fffc038
#define FIO1CLR                  0x3fffc03c

/* USB device */
#define USB                      0xe0090000
#define USBDevIntSt_offset       0x00000000
#define USBDevIntEn_offset       0x00000004
#define USBDevIntClr_offset      0x00000008
#define USBDevIntSet_offset      0x0000000c
#define USBCmdCode_offset        0x00000010
#define USBCmdData_offset        0x00000014
#define USBRxData_offset         0x00000018
#define USBTxData_offset         0x0000001c
#define USBRxPLen_offset         0x00000020
#define USBTxPLen_offset         0x00000024
#define USBCtrl_offset           0x00000028
#define USBDevIntPri_offset      0x0000002c
#define USBEpIntSt_offset        0x00000030
#define USBEpIntEn_offset        0x00000034
#define USBEpIntClr_offset       0x00000038
#define USBEpIntSet_offset       0x0000003c
#define USBEpIntPri_offset       0x00000040
#define USBReEp_offset           0x00000044
#define USBEpInd_offset          0x00000048
#define USBMaxPSize_offset       0x0000004c
#define USBDMARst_offset         0x00000050
#define USBDMARClr_offset        0x00000054
#define USBDMARSet_offset        0x00000058
#define USBUDCAH_offset          0x00000080
#define USBEpDMASt_offset        0x00000084
#define USBEpDMAEn_offset        0x00000088
#define USBEpDMADis_offset       0x0000008c
#define USBDMAIntSt_offset       0x00000090
#define USBDMAIntEn_offset       0x00000094
#define USBEoTIntSt_offset       0x000000a0
#define USBEoTIntClr_offset      0x000000a4
#define USBEoTIntSet_offset      0x000000a8
#define USBNDDRintSt_offset      0x000000ac
#define USBNDDDRIntClr_offset    0x000000b0
#define USBNDDRIntSet_offset     0x000000b4
#define USBSysErrIntSt_offset    0x000000b8
#define USBSysErrIntClr_offset   0x000000bc
#define USBSysErrIntSet_offset   0x000000c0
#define USBDevIntSt              0xe0090000
#define USBDevIntEn              0xe0090004
#define USBDevIntClr             0xe0090008
#define USBDevIntSet             0xe009000c
#define USBCmdCode               0xe0090010
#define USBCmdData               0xe0090014
#define USBRxData                0xe0090018
#define USBTxData                0xe009001c
#define USBRxPLen                0xe0090020
#define USBTxPLen                0xe0090024
#define USBCtrl                  0xe0090028
#define USBDevIntPri             0xe009002c
#define USBEpIntSt               0xe0090030
#define USBEpIntEn               0xe0090034
#define USBEpIntClr              0xe0090038
#define USBEpIntSet              0xe009003c
#define USBEpIntPri              0xe0090040
#define USBReEp                  0xe0090044
#define USBEpInd                 0xe0090048
#define USBMaxPSize              0xe009004c
#define USBDMARst                0xe0090050
#define USBDMARClr               0xe0090054
#define USBDMARSet               0xe0090058
#define USBUDCAH                 0xe0090080
#define USBEpDMASt               0xe0090084
#define USBEpDMAEn               0xe0090088
#define USBEpDMADis              0xe009008c
#define USBDMAIntSt              0xe0090090
#define USBDMAIntEn              0xe0090094
#define USBEoTIntSt              0xe00900a0
#define USBEoTIntClr             0xe00900a4
#define USBEoTIntSet             0xe00900a8
#define USBNDDRintSt             0xe00900ac
#define USBNDDDRIntClr           0xe00900b0
#define USBNDDRIntSet            0xe00900b4
#define USBSysErrIntSt           0xe00900b8
#define USBSysErrIntClr          0xe00900bc
#define USBSysErrIntSet          0xe00900c0

/* USB device IntSt register */
#define USBIntSt                 0xe01fc1c0
#define USBIntSt_offset          0x00000000

/* Analog to Digital Converter 0 */
#define AD0                      0xe0034000
#define AD0CR_offset             0x00000000
#define AD0GDR_offset            0x00000004
#define AD0GSR_offset            0x00000008
#define AD0CR                    0xe0034000
#define AD0GDR                   0xe0034004
#define AD0GSR                   0xe0034008

/* Analog to Digital Converter 1 */
#define AD1                      0xe0060000
#define AD1CR_offset             0x00000000
#define AD1GDR_offset            0x00000004
#define AD1GSR_offset            0x00000008
#define AD1CR                    0xe0060000
#define AD1GDR                   0xe0060004
#define AD1GSR                   0xe0060008

#else

/* Vectored Interrupt Controller */
typedef struct {
   unsigned int IRQStatus; 
   unsigned int FIQStatus; 
   unsigned int RawIntr; 
   unsigned int IntSelect; 
   unsigned int IntEnable; 
   unsigned int IntEnClr; 
   unsigned int SoftInt; 
   unsigned int SoftIntClear; 
   unsigned int Protection; 
   unsigned int anon36[3];
   unsigned int VectAddr; 
   unsigned int DefVectAddr; 
   unsigned int anon56[50];
   unsigned int VectAddr0; 
   unsigned int VectAddr1; 
   unsigned int VectAddr2; 
   unsigned int VectAddr3; 
   unsigned int VectAddr4; 
   unsigned int VectAddr5; 
   unsigned int VectAddr6; 
   unsigned int VectAddr7; 
   unsigned int VectAddr8; 
   unsigned int VectAddr9; 
   unsigned int VectAddr10; 
   unsigned int VectAddr11; 
   unsigned int VectAddr12; 
   unsigned int VectAddr13; 
   unsigned int VectAddr14; 
   unsigned int VectAddr15; 
   unsigned int anon320[48];
   unsigned int VectCntl0; 
   unsigned int VectCntl1; 
   unsigned int VectCntl2; 
   unsigned int VectCntl3; 
   unsigned int VectCntl4; 
   unsigned int VectCntl5; 
   unsigned int VectCntl6; 
   unsigned int VectCntl7; 
   unsigned int VectCntl8; 
   unsigned int VectCntl9; 
   unsigned int VectCntl10; 
   unsigned int VectCntl11; 
   unsigned int VectCntl12; 
   unsigned int VectCntl13; 
   unsigned int VectCntl14; 
   unsigned int VectCntl15; 
} VIC_struct;
typedef volatile VIC_struct * VIC;

#define VIC                  ((VIC)(0xfffff000))
#define VICIRQStatus         (*(volatile unsigned int *)(0xfffff000))
#define VICFIQStatus         (*(volatile unsigned int *)(0xfffff004))
#define VICRawIntr           (*(volatile unsigned int *)(0xfffff008))
#define VICIntSelect         (*(volatile unsigned int *)(0xfffff00c))
#define VICIntEnable         (*(volatile unsigned int *)(0xfffff010))
#define VICIntEnClr          (*(volatile unsigned int *)(0xfffff014))
#define VICSoftInt           (*(volatile unsigned int *)(0xfffff018))
#define VICSoftIntClear      (*(volatile unsigned int *)(0xfffff01c))
#define VICProtection        (*(volatile unsigned int *)(0xfffff020))
#define VICVectAddr          (*(volatile unsigned int *)(0xfffff030))
#define VICDefVectAddr       (*(volatile unsigned int *)(0xfffff034))
#define VICVectAddr0         (*(volatile unsigned int *)(0xfffff100))
#define VICVectAddr1         (*(volatile unsigned int *)(0xfffff104))
#define VICVectAddr2         (*(volatile unsigned int *)(0xfffff108))
#define VICVectAddr3         (*(volatile unsigned int *)(0xfffff10c))
#define VICVectAddr4         (*(volatile unsigned int *)(0xfffff110))
#define VICVectAddr5         (*(volatile unsigned int *)(0xfffff114))
#define VICVectAddr6         (*(volatile unsigned int *)(0xfffff118))
#define VICVectAddr7         (*(volatile unsigned int *)(0xfffff11c))
#define VICVectAddr8         (*(volatile unsigned int *)(0xfffff120))
#define VICVectAddr9         (*(volatile unsigned int *)(0xfffff124))
#define VICVectAddr10        (*(volatile unsigned int *)(0xfffff128))
#define VICVectAddr11        (*(volatile unsigned int *)(0xfffff12c))
#define VICVectAddr12        (*(volatile unsigned int *)(0xfffff130))
#define VICVectAddr13        (*(volatile unsigned int *)(0xfffff134))
#define VICVectAddr14        (*(volatile unsigned int *)(0xfffff138))
#define VICVectAddr15        (*(volatile unsigned int *)(0xfffff13c))
#define VICVectCntl0         (*(volatile unsigned int *)(0xfffff200))
#define VICVectCntl1         (*(volatile unsigned int *)(0xfffff204))
#define VICVectCntl2         (*(volatile unsigned int *)(0xfffff208))
#define VICVectCntl3         (*(volatile unsigned int *)(0xfffff20c))
#define VICVectCntl4         (*(volatile unsigned int *)(0xfffff210))
#define VICVectCntl5         (*(volatile unsigned int *)(0xfffff214))
#define VICVectCntl6         (*(volatile unsigned int *)(0xfffff218))
#define VICVectCntl7         (*(volatile unsigned int *)(0xfffff21c))
#define VICVectCntl8         (*(volatile unsigned int *)(0xfffff220))
#define VICVectCntl9         (*(volatile unsigned int *)(0xfffff224))
#define VICVectCntl10        (*(volatile unsigned int *)(0xfffff228))
#define VICVectCntl11        (*(volatile unsigned int *)(0xfffff22c))
#define VICVectCntl12        (*(volatile unsigned int *)(0xfffff230))
#define VICVectCntl13        (*(volatile unsigned int *)(0xfffff234))
#define VICVectCntl14        (*(volatile unsigned int *)(0xfffff238))
#define VICVectCntl15        (*(volatile unsigned int *)(0xfffff23c))

/* Watchdog */
typedef struct {
   unsigned int MOD; 
   unsigned int TC; 
   unsigned int FEED; 
   unsigned int TV; 
} WATCHDOG_struct;
typedef volatile WATCHDOG_struct * WATCHDOG;

#define WD                   ((WATCHDOG)(0xe0000000))
#define WDMOD                (*(volatile unsigned int *)(0xe0000000))
#define WDTC                 (*(volatile unsigned int *)(0xe0000004))
#define WDFEED               (*(volatile unsigned int *)(0xe0000008))
#define WDTV                 (*(volatile unsigned int *)(0xe000000c))

/* Timer (32 bit) 0 */
typedef struct {
   unsigned int IR; 
   unsigned int TCR; 
   unsigned int TC; 
   unsigned int PR; 
   unsigned int PC; 
   unsigned int MCR; 
   unsigned int MR0; 
   unsigned int MR1; 
   unsigned int MR2; 
   unsigned int MR3; 
   unsigned int CCR; 
   unsigned int CR0; 
   unsigned int CR1; 
   unsigned int CR2; 
   unsigned int CR3; 
   unsigned int EMR; 
   unsigned int anon64[12];
   unsigned int CTCR; 
} TIMER_struct;
typedef volatile TIMER_struct * TIMER;

#define T0                   ((TIMER)(0xe0004000))
#define T0IR                 (*(volatile unsigned int *)(0xe0004000))
#define T0TCR                (*(volatile unsigned int *)(0xe0004004))
#define T0TC                 (*(volatile unsigned int *)(0xe0004008))
#define T0PR                 (*(volatile unsigned int *)(0xe000400c))
#define T0PC                 (*(volatile unsigned int *)(0xe0004010))
#define T0MCR                (*(volatile unsigned int *)(0xe0004014))
#define T0MR0                (*(volatile unsigned int *)(0xe0004018))
#define T0MR1                (*(volatile unsigned int *)(0xe000401c))
#define T0MR2                (*(volatile unsigned int *)(0xe0004020))
#define T0MR3                (*(volatile unsigned int *)(0xe0004024))
#define T0CCR                (*(volatile unsigned int *)(0xe0004028))
#define T0CR0                (*(volatile unsigned int *)(0xe000402c))
#define T0CR1                (*(volatile unsigned int *)(0xe0004030))
#define T0CR2                (*(volatile unsigned int *)(0xe0004034))
#define T0CR3                (*(volatile unsigned int *)(0xe0004038))
#define T0EMR                (*(volatile unsigned int *)(0xe000403c))
#define T0CTCR               (*(volatile unsigned int *)(0xe0004070))

/* Timer (32 bit) 1 */

#define T1                   ((TIMER)(0xe0008000))
#define T1IR                 (*(volatile unsigned int *)(0xe0008000))
#define T1TCR                (*(volatile unsigned int *)(0xe0008004))
#define T1TC                 (*(volatile unsigned int *)(0xe0008008))
#define T1PR                 (*(volatile unsigned int *)(0xe000800c))
#define T1PC                 (*(volatile unsigned int *)(0xe0008010))
#define T1MCR                (*(volatile unsigned int *)(0xe0008014))
#define T1MR0                (*(volatile unsigned int *)(0xe0008018))
#define T1MR1                (*(volatile unsigned int *)(0xe000801c))
#define T1MR2                (*(volatile unsigned int *)(0xe0008020))
#define T1MR3                (*(volatile unsigned int *)(0xe0008024))
#define T1CCR                (*(volatile unsigned int *)(0xe0008028))
#define T1CR0                (*(volatile unsigned int *)(0xe000802c))
#define T1CR1                (*(volatile unsigned int *)(0xe0008030))
#define T1CR2                (*(volatile unsigned int *)(0xe0008034))
#define T1CR3                (*(volatile unsigned int *)(0xe0008038))
#define T1EMR                (*(volatile unsigned int *)(0xe000803c))
#define T1CTCR               (*(volatile unsigned int *)(0xe0008070))

/* Universal Asynchronous Receiver Transmitter 0 */
typedef struct {
   unsigned int RBR; 
   /*overlap: unsigned int THR;*/ 
   #define THR RBR
   /*overlap: unsigned int DLL;*/ 
   #define DLL THR
   unsigned int IER; 
   /*overlap: unsigned int DLM;*/ 
   #define DLM IER
   unsigned int IIR; 
   /*overlap: unsigned int FCR;*/ 
   #define FCR IIR
   unsigned int LCR; 
   unsigned int MCR; 
   unsigned int LSR; 
   unsigned int MSR; 
   unsigned int SCR; 
} UART_struct;
typedef volatile UART_struct * UART;

#define U0                   ((UART)(0xe000c000))
#define U0RBR                (*(volatile unsigned int *)(0xe000c000))
#define U0THR                (*(volatile unsigned int *)(0xe000c000))
#define U0DLL                (*(volatile unsigned int *)(0xe000c000))
#define U0IER                (*(volatile unsigned int *)(0xe000c004))
#define U0DLM                (*(volatile unsigned int *)(0xe000c004))
#define U0IIR                (*(volatile unsigned int *)(0xe000c008))
#define U0FCR                (*(volatile unsigned int *)(0xe000c008))
#define U0LCR                (*(volatile unsigned int *)(0xe000c00c))
#define U0MCR                (*(volatile unsigned int *)(0xe000c010))
#define U0LSR                (*(volatile unsigned int *)(0xe000c014))
#define U0MSR                (*(volatile unsigned int *)(0xe000c018))
#define U0SCR                (*(volatile unsigned int *)(0xe000c01c))

/* Universal Asynchronous Receiver Transmitter 1 */

#define U1                   ((UART)(0xe0010000))
#define U1RBR                (*(volatile unsigned int *)(0xe0010000))
#define U1THR                (*(volatile unsigned int *)(0xe0010000))
#define U1DLL                (*(volatile unsigned int *)(0xe0010000))
#define U1IER                (*(volatile unsigned int *)(0xe0010004))
#define U1DLM                (*(volatile unsigned int *)(0xe0010004))
#define U1IIR                (*(volatile unsigned int *)(0xe0010008))
#define U1FCR                (*(volatile unsigned int *)(0xe0010008))
#define U1LCR                (*(volatile unsigned int *)(0xe001000c))
#define U1MCR                (*(volatile unsigned int *)(0xe0010010))
#define U1LSR                (*(volatile unsigned int *)(0xe0010014))
#define U1MSR                (*(volatile unsigned int *)(0xe0010018))
#define U1SCR                (*(volatile unsigned int *)(0xe001001c))

/* Pulse Width Modulator */
typedef struct {
   unsigned int IR; 
   unsigned int TCR; 
   unsigned int TC; 
   unsigned int PR; 
   unsigned int PC; 
   unsigned int MCR; 
   unsigned int MR0; 
   unsigned int MR1; 
   unsigned int MR2; 
   unsigned int MR3; 
   unsigned int anon40[6];
   unsigned int MR4; 
   unsigned int MR5; 
   unsigned int MR6; 
   unsigned int PCR; 
   unsigned int LER; 
} PWM_struct;
typedef volatile PWM_struct * PWM;

#define PWM                  ((PWM)(0xe0014000))
#define PWMIR                (*(volatile unsigned int *)(0xe0014000))
#define PWMTCR               (*(volatile unsigned int *)(0xe0014004))
#define PWMTC                (*(volatile unsigned int *)(0xe0014008))
#define PWMPR                (*(volatile unsigned int *)(0xe001400c))
#define PWMPC                (*(volatile unsigned int *)(0xe0014010))
#define PWMMCR               (*(volatile unsigned int *)(0xe0014014))
#define PWMMR0               (*(volatile unsigned int *)(0xe0014018))
#define PWMMR1               (*(volatile unsigned int *)(0xe001401c))
#define PWMMR2               (*(volatile unsigned int *)(0xe0014020))
#define PWMMR3               (*(volatile unsigned int *)(0xe0014024))
#define PWMMR4               (*(volatile unsigned int *)(0xe0014040))
#define PWMMR5               (*(volatile unsigned int *)(0xe0014044))
#define PWMMR6               (*(volatile unsigned int *)(0xe0014048))
#define PWMPCR               (*(volatile unsigned int *)(0xe001404c))
#define PWMLER               (*(volatile unsigned int *)(0xe0014050))

/* I2C Interface */
typedef struct {
   unsigned int CONSET; 
   unsigned int STAT; 
   unsigned int DAT; 
   unsigned int ADR; 
   unsigned int SCLH; 
   unsigned int SCLL; 
   unsigned int CONCLR; 
} I2C_struct;
typedef volatile I2C_struct * I2C;

#define I2                   ((I2C)(0xe001c000))
#define I2CONSET             (*(volatile unsigned int *)(0xe001c000))
#define I2STAT               (*(volatile unsigned int *)(0xe001c004))
#define I2DAT                (*(volatile unsigned int *)(0xe001c008))
#define I2ADR                (*(volatile unsigned int *)(0xe001c00c))
#define I2SCLH               (*(volatile unsigned int *)(0xe001c010))
#define I2SCLL               (*(volatile unsigned int *)(0xe001c014))
#define I2CONCLR             (*(volatile unsigned int *)(0xe001c018))

/* Serial Peripheral Interface */
typedef struct {
   unsigned int CR; 
   unsigned int SR; 
   unsigned int DR; 
   unsigned int CCR; 
   unsigned int TCR; 
   unsigned int TSR; 
   unsigned int TOR; 
   unsigned int INT; 
} SPI_struct;
typedef volatile SPI_struct * SPI;

#define SP                   ((SPI)(0xe0020000))
#define SPCR                 (*(volatile unsigned int *)(0xe0020000))
#define SPSR                 (*(volatile unsigned int *)(0xe0020004))
#define SPDR                 (*(volatile unsigned int *)(0xe0020008))
#define SPCCR                (*(volatile unsigned int *)(0xe002000c))
#define SPTCR                (*(volatile unsigned int *)(0xe0020010))
#define SPTSR                (*(volatile unsigned int *)(0xe0020014))
#define SPTOR                (*(volatile unsigned int *)(0xe0020018))
#define SPINT                (*(volatile unsigned int *)(0xe002001c))

/* Real Time Clock */
typedef struct {
   unsigned int ILR; 
   unsigned int CTC; 
   unsigned int CCR; 
   unsigned int CIIR; 
   unsigned int AMR; 
   unsigned int CTIME0; 
   unsigned int CTIME1; 
   unsigned int CTIME2; 
   unsigned int SEC; 
   unsigned int MIN; 
   unsigned int HOUR; 
   unsigned int DOM; 
   unsigned int DOW; 
   unsigned int DOY; 
   unsigned int MONTH; 
   unsigned int YEAR; 
   unsigned int anon64[8];
   unsigned int ALSEC; 
   unsigned int ALMIN; 
   unsigned int ALHOUR; 
   unsigned int ALDOM; 
   unsigned int ALDOW; 
   unsigned int ALDOY; 
   unsigned int ALMON; 
   unsigned int ALYEAR; 
   unsigned int PREINT; 
   unsigned int PREFRAC; 
} RTC_struct;
typedef volatile RTC_struct * RTC;

#define RTC                  ((RTC)(0xe0024000))
#define RTCILR               (*(volatile unsigned int *)(0xe0024000))
#define RTCCTC               (*(volatile unsigned int *)(0xe0024004))
#define RTCCCR               (*(volatile unsigned int *)(0xe0024008))
#define RTCCIIR              (*(volatile unsigned int *)(0xe002400c))
#define RTCAMR               (*(volatile unsigned int *)(0xe0024010))
#define RTCCTIME0            (*(volatile unsigned int *)(0xe0024014))
#define RTCCTIME1            (*(volatile unsigned int *)(0xe0024018))
#define RTCCTIME2            (*(volatile unsigned int *)(0xe002401c))
#define RTCSEC               (*(volatile unsigned int *)(0xe0024020))
#define RTCMIN               (*(volatile unsigned int *)(0xe0024024))
#define RTCHOUR              (*(volatile unsigned int *)(0xe0024028))
#define RTCDOM               (*(volatile unsigned int *)(0xe002402c))
#define RTCDOW               (*(volatile unsigned int *)(0xe0024030))
#define RTCDOY               (*(volatile unsigned int *)(0xe0024034))
#define RTCMONTH             (*(volatile unsigned int *)(0xe0024038))
#define RTCYEAR              (*(volatile unsigned int *)(0xe002403c))
#define RTCALSEC             (*(volatile unsigned int *)(0xe0024060))
#define RTCALMIN             (*(volatile unsigned int *)(0xe0024064))
#define RTCALHOUR            (*(volatile unsigned int *)(0xe0024068))
#define RTCALDOM             (*(volatile unsigned int *)(0xe002406c))
#define RTCALDOW             (*(volatile unsigned int *)(0xe0024070))
#define RTCALDOY             (*(volatile unsigned int *)(0xe0024074))
#define RTCALMON             (*(volatile unsigned int *)(0xe0024078))
#define RTCALYEAR            (*(volatile unsigned int *)(0xe002407c))
#define RTCPREINT            (*(volatile unsigned int *)(0xe0024080))
#define RTCPREFRAC           (*(volatile unsigned int *)(0xe0024084))

/* General Purpose IO 0 */
typedef struct {
   unsigned int PIN; 
   unsigned int SET; 
   unsigned int DIR; 
   unsigned int CLR; 
} GPIO_struct;
typedef volatile GPIO_struct * GPIO;

#define IO0                  ((GPIO)(0xe0028000))
#define IO0PIN               (*(volatile unsigned int *)(0xe0028000))
#define IO0SET               (*(volatile unsigned int *)(0xe0028004))
#define IO0DIR               (*(volatile unsigned int *)(0xe0028008))
#define IO0CLR               (*(volatile unsigned int *)(0xe002800c))

/* General Purpose IO 1 */

#define IO1                  ((GPIO)(0xe0028010))
#define IO1PIN               (*(volatile unsigned int *)(0xe0028010))
#define IO1SET               (*(volatile unsigned int *)(0xe0028014))
#define IO1DIR               (*(volatile unsigned int *)(0xe0028018))
#define IO1CLR               (*(volatile unsigned int *)(0xe002801c))

/* Pin Connect Block */
typedef struct {
   unsigned int _0; 
   unsigned int _1; 
   unsigned int anon8[3];
   unsigned int _2; 
} PINSEL_struct;
typedef volatile PINSEL_struct * PINSEL;

#define PINSEL               ((PINSEL)(0xe002c000))
#define PINSEL0              (*(volatile unsigned int *)(0xe002c000))
#define PINSEL1              (*(volatile unsigned int *)(0xe002c004))
#define PINSEL2              (*(volatile unsigned int *)(0xe002c014))

/* DA converter Connect Block */
typedef struct {
   unsigned int R; 
} DAC_struct;
typedef volatile DAC_struct * DAC;

#define DAC                  ((DAC)(0xe006c000))
#define DACR                 (*(volatile unsigned int *)(0xe006c000))

/* Memory Accelerator Module */
typedef struct {
   unsigned int CR; 
   unsigned int TIM; 
   unsigned int anon8[14];
   unsigned int MAP; 
} MAM_struct;
typedef volatile MAM_struct * MAM;

#define MAM                  ((MAM)(0xe01fc000))
#define MAMCR                (*(volatile unsigned int *)(0xe01fc000))
#define MAMTIM               (*(volatile unsigned int *)(0xe01fc004))
#define MAMMAP               (*(volatile unsigned int *)(0xe01fc040))

/* Phase Locked Loop 0 */
typedef struct {
   unsigned int CON; 
   unsigned int CFG; 
   unsigned int STAT; 
   unsigned int FEED; 
} PLL_struct;
typedef volatile PLL_struct * PLL;

#define PLL0                 ((PLL)(0xe01fc080))
#define PLL0CON              (*(volatile unsigned int *)(0xe01fc080))
#define PLL0CFG              (*(volatile unsigned int *)(0xe01fc084))
#define PLL0STAT             (*(volatile unsigned int *)(0xe01fc088))
#define PLL0FEED             (*(volatile unsigned int *)(0xe01fc08c))

/* Phase Locked Loop 1 */

#define PLL1                 ((PLL)(0xe01fc0a0))
#define PLL1CON              (*(volatile unsigned int *)(0xe01fc0a0))
#define PLL1CFG              (*(volatile unsigned int *)(0xe01fc0a4))
#define PLL1STAT             (*(volatile unsigned int *)(0xe01fc0a8))
#define PLL1FEED             (*(volatile unsigned int *)(0xe01fc0ac))

/* VPB Divider */
typedef struct {
   unsigned int DIV; 
} VPB_struct;
typedef volatile VPB_struct * VPB;

#define VPB                  ((VPB)(0xe01fc100))
#define VPBDIV               (*(volatile unsigned int *)(0xe01fc100))

/* Power Control */
typedef struct {
   unsigned int anon0[1];
   unsigned int P; 
} PCON_struct;
typedef volatile PCON_struct * PCON;

#define PCON                 ((PCON)(0xe01fc0c0))
#define PCONP                (*(volatile unsigned int *)(0xe01fc0c4))

/* External Interrupts */
typedef struct {
   unsigned int INT; 
   unsigned int WAKE; 
} EXTI_struct;
typedef volatile EXTI_struct * EXTI;

#define EXT                  ((EXTI)(0xe01fc140))
#define EXTINT               (*(volatile unsigned int *)(0xe01fc140))
#define EXTWAKE              (*(volatile unsigned int *)(0xe01fc144))

/* System Control and Status */
typedef struct {
   unsigned int X; 
} SCS_struct;
typedef volatile SCS_struct * SCS;

#define SCS                  ((SCS)(0xe01fc1a0))

/* Memory mapping control */
typedef struct {
   unsigned int MAP; 
} MEM_struct;
typedef volatile MEM_struct * MEM;

#define MEM                  ((MEM)(0xe01fc040))
#define MEMMAP               (*(volatile unsigned int *)(0xe01fc040))

/* Fast General Purpose IO 0 */
typedef struct {
   unsigned int DIR; 
   unsigned int anon4[3];
   unsigned int MASK; 
   unsigned int PIN; 
   unsigned int SET; 
   unsigned int CLR; 
} FIO_struct;
typedef volatile FIO_struct * FIO;

#define FIO0                 ((FIO)(0x3fffc000))
#define FIO0DIR              (*(volatile unsigned int *)(0x3fffc000))
#define FIO0MASK             (*(volatile unsigned int *)(0x3fffc010))
#define FIO0PIN              (*(volatile unsigned int *)(0x3fffc014))
#define FIO0SET              (*(volatile unsigned int *)(0x3fffc018))
#define FIO0CLR              (*(volatile unsigned int *)(0x3fffc01c))

/* Fast General Purpose IO 1 */

#define FIO1                 ((FIO)(0x3fffc020))
#define FIO1DIR              (*(volatile unsigned int *)(0x3fffc020))
#define FIO1MASK             (*(volatile unsigned int *)(0x3fffc030))
#define FIO1PIN              (*(volatile unsigned int *)(0x3fffc034))
#define FIO1SET              (*(volatile unsigned int *)(0x3fffc038))
#define FIO1CLR              (*(volatile unsigned int *)(0x3fffc03c))

/* USB device */
typedef struct {
   unsigned int DevIntSt; 
   unsigned int DevIntEn; 
   unsigned int DevIntClr; 
   unsigned int DevIntSet; 
   unsigned int CmdCode; 
   unsigned int CmdData; 
   unsigned int RxData; 
   unsigned int TxData; 
   unsigned int RxPLen; 
   unsigned int TxPLen; 
   unsigned int Ctrl; 
   unsigned int DevIntPri; 
   unsigned int EpIntSt; 
   unsigned int EpIntEn; 
   unsigned int EpIntClr; 
   unsigned int EpIntSet; 
   unsigned int EpIntPri; 
   unsigned int ReEp; 
   unsigned int EpInd; 
   unsigned int MaxPSize; 
   unsigned int DMARst; 
   unsigned int DMARClr; 
   unsigned int DMARSet; 
   unsigned int anon92[9];
   unsigned int UDCAH; 
   unsigned int EpDMASt; 
   unsigned int EpDMAEn; 
   unsigned int EpDMADis; 
   unsigned int DMAIntSt; 
   unsigned int DMAIntEn; 
   unsigned int anon152[2];
   unsigned int EoTIntSt; 
   unsigned int EoTIntClr; 
   unsigned int EoTIntSet; 
   unsigned int NDDRintSt; 
   unsigned int NDDDRIntClr; 
   unsigned int NDDRIntSet; 
   unsigned int SysErrIntSt; 
   unsigned int SysErrIntClr; 
   unsigned int SysErrIntSet; 
} USB_struct;
typedef volatile USB_struct * USB;

#define USB                  ((USB)(0xe0090000))
#define USBDevIntSt          (*(volatile unsigned int *)(0xe0090000))
#define USBDevIntEn          (*(volatile unsigned int *)(0xe0090004))
#define USBDevIntClr         (*(volatile unsigned int *)(0xe0090008))
#define USBDevIntSet         (*(volatile unsigned int *)(0xe009000c))
#define USBCmdCode           (*(volatile unsigned int *)(0xe0090010))
#define USBCmdData           (*(volatile unsigned int *)(0xe0090014))
#define USBRxData            (*(volatile unsigned int *)(0xe0090018))
#define USBTxData            (*(volatile unsigned int *)(0xe009001c))
#define USBRxPLen            (*(volatile unsigned int *)(0xe0090020))
#define USBTxPLen            (*(volatile unsigned int *)(0xe0090024))
#define USBCtrl              (*(volatile unsigned int *)(0xe0090028))
#define USBDevIntPri         (*(volatile unsigned int *)(0xe009002c))
#define USBEpIntSt           (*(volatile unsigned int *)(0xe0090030))
#define USBEpIntEn           (*(volatile unsigned int *)(0xe0090034))
#define USBEpIntClr          (*(volatile unsigned int *)(0xe0090038))
#define USBEpIntSet          (*(volatile unsigned int *)(0xe009003c))
#define USBEpIntPri          (*(volatile unsigned int *)(0xe0090040))
#define USBReEp              (*(volatile unsigned int *)(0xe0090044))
#define USBEpInd             (*(volatile unsigned int *)(0xe0090048))
#define USBMaxPSize          (*(volatile unsigned int *)(0xe009004c))
#define USBDMARst            (*(volatile unsigned int *)(0xe0090050))
#define USBDMARClr           (*(volatile unsigned int *)(0xe0090054))
#define USBDMARSet           (*(volatile unsigned int *)(0xe0090058))
#define USBUDCAH             (*(volatile unsigned int *)(0xe0090080))
#define USBEpDMASt           (*(volatile unsigned int *)(0xe0090084))
#define USBEpDMAEn           (*(volatile unsigned int *)(0xe0090088))
#define USBEpDMADis          (*(volatile unsigned int *)(0xe009008c))
#define USBDMAIntSt          (*(volatile unsigned int *)(0xe0090090))
#define USBDMAIntEn          (*(volatile unsigned int *)(0xe0090094))
#define USBEoTIntSt          (*(volatile unsigned int *)(0xe00900a0))
#define USBEoTIntClr         (*(volatile unsigned int *)(0xe00900a4))
#define USBEoTIntSet         (*(volatile unsigned int *)(0xe00900a8))
#define USBNDDRintSt         (*(volatile unsigned int *)(0xe00900ac))
#define USBNDDDRIntClr       (*(volatile unsigned int *)(0xe00900b0))
#define USBNDDRIntSet        (*(volatile unsigned int *)(0xe00900b4))
#define USBSysErrIntSt       (*(volatile unsigned int *)(0xe00900b8))
#define USBSysErrIntClr      (*(volatile unsigned int *)(0xe00900bc))
#define USBSysErrIntSet      (*(volatile unsigned int *)(0xe00900c0))

/* USB device IntSt register */
typedef struct {
   unsigned int X; 
} USBIntSt_struct;
typedef volatile USBIntSt_struct * USBIntSt;

#define USBIntSt             ((USBIntSt)(0xe01fc1c0))

/* Analog to Digital Converter 0 */
typedef struct {
   unsigned int CR; 
   unsigned int GDR; 
   unsigned int GSR; 
} ADC_struct;
typedef volatile ADC_struct * ADC;

#define AD0                  ((ADC)(0xe0034000))
#define AD0CR                (*(volatile unsigned int *)(0xe0034000))
#define AD0GDR               (*(volatile unsigned int *)(0xe0034004))
#define AD0GSR               (*(volatile unsigned int *)(0xe0034008))

/* Analog to Digital Converter 1 */

#define AD1                  ((ADC)(0xe0060000))
#define AD1CR                (*(volatile unsigned int *)(0xe0060000))
#define AD1GDR               (*(volatile unsigned int *)(0xe0060004))
#define AD1GSR               (*(volatile unsigned int *)(0xe0060008))

#endif
